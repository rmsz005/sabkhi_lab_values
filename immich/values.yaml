---
# Direct Immich chart configuration - values must be under immich: section
immich:
  persistence:
    library:
      existingClaim: "immich-library-pvc"

image:
  tag: "v1.139.2"

# Use external PostgreSQL (deprecated subchart)
postgresql:
  enabled: false

# Override environment variables for external PostgreSQL
env:
  DB_HOSTNAME: "immich-postgresql"
  DB_USERNAME: "immich"
  DB_DATABASE_NAME: "immich"
  # Redis Configuration
  REDIS_HOSTNAME: "immich-redis-master"
  REDIS_PORT: "6379"
  # Production tuning
  NODE_ENV: "production"
  LOG_LEVEL: "log"  # Options: verbose, debug, log, warn, error
  # Upload optimization
  IMMICH_WORKERS_INCLUDE: "api"
  IMMICH_API_METRICS_PORT: "8081"
  # Concurrency settings for large uploads
  IMMICH_MEDIA_LOCATION: "/usr/src/app/upload"
  # Load from secrets explicitly
  DB_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: immich-postgresql-secret
        key: password
  REDIS_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: immich-redis-secret
        key: password

server:
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        cert-manager.io/cluster-issuer: "letsencrypt"
        cert-manager.io/common-name: "immich.internal.rmsz005.com"
      hosts:
        - host: immich.internal.rmsz005.com
          paths:
            - path: /
              pathType: Prefix
        - host: "" # Catch-all rule for direct IP access
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - immich.internal.rmsz005.com
          secretName: immich-tls

# Resource management for Immich pods - optimized for autoscaling
server:
  resources:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "6Gi"     # Increased to handle upload spikes
      cpu: "3000m"      # Increased to handle processing load

machine-learning:
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "6Gi"
      cpu: "3000m"

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: true
    existingSecret: immich-redis-secret
    existingSecretPasswordKey: password
  master:
    persistence:
      enabled: true
      size: 1Gi
      storageClass: "longhorn-ssd-replicated"  # Fast storage for cache
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 500m

# PVC is created by immich-storage ArgoCD application
