---
# Direct Immich chart configuration - values must be under immich: section
immich:
  persistence:
    library:
      existingClaim: "immich-library-pvc"

image:
  tag: "v1.139.2"

# Use external PostgreSQL (deprecated subchart)
postgresql:
  enabled: false

# Override environment variables for external PostgreSQL
env:
  DB_HOSTNAME: "immich-postgresql"
  DB_USERNAME: "immich"
  DB_DATABASE_NAME: "immich"
  # Redis Configuration
  REDIS_HOSTNAME: "immich-redis-master"
  REDIS_PORT: "6379"
  # Production tuning
  NODE_ENV: "production"
  LOG_LEVEL: "log"  # Options: verbose, debug, log, warn, error
  # Transcoding optimization
  IMMICH_WORKERS_INCLUDE: "api"
  IMMICH_WORKERS_EXCLUDE: ""
  # Increase transcoding parallelism
  FFMPEG_THREADS: "0"  # Use all available CPU cores
  # Load from secrets explicitly
  DB_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: immich-postgresql-secret
        key: password
  REDIS_PASSWORD:
    valueFrom:
      secretKeyRef:
        name: immich-redis-secret
        key: password

server:
  controller:
    replicas: 3  # Distribute server workload across multiple nodes
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        cert-manager.io/cluster-issuer: "letsencrypt"
        cert-manager.io/common-name: "immich.internal.rmsz005.com"
      hosts:
        - host: immich.internal.rmsz005.com
          paths:
            - path: /
              pathType: Prefix
        - host: "" # Catch-all rule for direct IP access
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - immich.internal.rmsz005.com
          secretName: immich-tls

# Scale machine learning for AI workloads
machine-learning:
  controller:
    replicas: 2  # Distribute ML processing
  
# Pod anti-affinity to spread workloads across nodes
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - immich
        topologyKey: kubernetes.io/hostname

# Resource management for Immich pods
resources:
  server:
    requests:
      memory: "1Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  microservices:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "8Gi"
      cpu: "4000m"
  machine-learning:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "6Gi"
      cpu: "3000m"

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: true
    existingSecret: immich-redis-secret
    existingSecretPasswordKey: password
  master:
    persistence:
      enabled: true
      size: 1Gi
      storageClass: "longhorn-ssd-replicated"  # Fast storage for cache
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 512Mi
        cpu: 500m

# PVC is created by immich-storage ArgoCD application
