1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.spotizerr.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "spotizerr.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.spotizerr.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "spotizerr.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "spotizerr.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.spotizerr.service.port }}
{{- else if contains "ClusterIP" .Values.spotizerr.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "spotizerr.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:7171 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 7171:$CONTAINER_PORT
{{- end }}

2. Documentation:
   For more information about Spotizerr, visit: https://spotizerr.rtfd.io

3. Configuration:
   {{- if .Values.spotizerr.secrets }}
   - Your secrets have been created from values.yaml
   {{- else }}
   - IMPORTANT: You need to add your environment variables to values.yaml under 'spotizerr.secrets'
   - Update your release with: helm upgrade {{ .Release.Name }} {{ .Chart.Name }} -f your-values.yaml
   {{- end }}

4. Persistent Storage:
   {{- if .Values.spotizerr.persistence.enabled }}
   - Data directory: {{ include "spotizerr.fullname" . }}-data ({{ .Values.spotizerr.persistence.data.size }})
   - Downloads directory: {{ include "spotizerr.fullname" . }}-downloads ({{ .Values.spotizerr.persistence.downloads.size }})
   - Logs directory: {{ include "spotizerr.fullname" . }}-logs ({{ .Values.spotizerr.persistence.logs.size }})
   - Cache: {{ include "spotizerr.fullname" . }}-cache ({{ .Values.spotizerr.persistence.cache.size }})
   {{- else }}
   - WARNING: Persistence is disabled. Data will be lost on pod restart!
   {{- end }}

5. Redis:
   {{- if .Values.redis.enabled }}
   - Redis is enabled and running at: {{ include "spotizerr.redis.fullname" . }}:{{ .Values.redis.service.port }}
   {{- if not .Values.redis.existingSecret }}
   - WARNING: Using default Redis password. Please change it in values.yaml for production use!
   {{- end }}
   {{- else }}
   - Redis is disabled. Make sure you have an external Redis instance configured.
   {{- end }}

6. Monitoring:
   - Check pod status: kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/name={{ include "spotizerr.name" . }}
   - View logs: kubectl logs -n {{ .Release.Namespace }} -l app.kubernetes.io/name={{ include "spotizerr.name" . }} -f
   - View events: kubectl get events -n {{ .Release.Namespace }} --sort-by='.lastTimestamp'

