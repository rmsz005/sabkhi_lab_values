# Default values for spotizerr
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Spotizerr application configuration
spotizerr:
  # Image configuration
  image:
    repository: cooldockerizer93/spotizerr
    pullPolicy: IfNotPresent
    tag: "latest"
  
  # Security context - matches docker-compose user:group 1000:1000
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
  
  # Resource limits and requests
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 256Mi
  
  # Service configuration
  service:
    type: ClusterIP
    port: 7171
    targetPort: 7171
  
  # Persistent storage configuration
  persistence:
    enabled: true
    # Storage class name (leave empty for default)
    storageClassName: ""
    
    # Data volume (config, creds, watch, history)
    data:
      enabled: true
      size: 1Gi
      accessMode: ReadWriteOnce
      # Use an existing PVC instead of creating a new one
      existingClaim: ""
    
    # Downloads volume
    downloads:
      enabled: true
      size: 10Gi
      accessMode: ReadWriteOnce
      # Use an existing PVC instead of creating a new one
      existingClaim: ""
    
    # Logs volume
    logs:
      enabled: true
      size: 1Gi
      accessMode: ReadWriteOnce
      # Use an existing PVC instead of creating a new one
      existingClaim: ""
    
    # Cache file volume
    cache:
      enabled: true
      size: 100Mi
      accessMode: ReadWriteOnce
      # Use an existing PVC instead of creating a new one
      existingClaim: ""
  
  # Environment variables
  # Add your custom environment variables here
  env: {}
    # EXAMPLE_VAR: "value"
  
  # Secrets - sensitive environment variables
  # These will be stored in a Kubernetes Secret
  secrets: {}
    # SPOTIFY_CLIENT_ID: ""
    # SPOTIFY_CLIENT_SECRET: ""
    # Add other sensitive values from your .env file
  
  # Liveness probe configuration
  livenessProbe:
    enabled: true
    httpGet:
      path: /
      port: 7171
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  # Readiness probe configuration
  readinessProbe:
    enabled: true
    httpGet:
      path: /
      port: 7171
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Redis configuration
redis:
  enabled: true
  
  # Image configuration
  image:
    repository: redis
    tag: "alpine"
    pullPolicy: IfNotPresent
  
  # Redis password (required)
  # WARNING: Change this in production or use existingSecret
  password: "changeme"
  
  # Use existing secret for Redis password
  # If set, the 'password' field above is ignored
  existingSecret: ""
  existingSecretPasswordKey: "redis-password"
  
  # Resource limits and requests
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  # Service configuration
  service:
    type: ClusterIP
    port: 6379
  
  # Persistence configuration
  persistence:
    enabled: true
    storageClassName: ""
    size: 1Gi
    accessMode: ReadWriteOnce
    # Use an existing PVC instead of creating a new one
    existingClaim: ""
  
  # Redis command arguments
  args:
    appendonly: true

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: spotizerr.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
    # - secretName: spotizerr-tls
    #   hosts:
    #     - spotizerr.local

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext:
  fsGroup: 1000

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity rules
affinity: {}

# Number of replicas (keep at 1 for stateful applications)
replicaCount: 1

# Image pull secrets
imagePullSecrets: []

# Additional labels
commonLabels: {}

