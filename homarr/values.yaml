homarr:
  database:
    type: sqlite
    migrationEnabled: true

  persistence:
    homarrConfig:
      enabled: true
      storageClassName: longhorn-nvme-replicated
      accessMode: ReadWriteOnce
      size: 2Gi
      annotations:
        recurring-job.longhorn.io/source: enabled
        recurring-job-group.longhorn.io/critical: enabled

    homarrDatabase:
      enabled: true
      storageClassName: longhorn-nvme-replicated
      accessMode: ReadWriteOnce
      size: 1Gi
      annotations:
        recurring-job.longhorn.io/source: enabled
        recurring-job-group.longhorn.io/critical: enabled

    homarrIcons:
      enabled: true
      storageClassName: longhorn-nvme-replicated
      accessMode: ReadWriteOnce
      size: 1Gi

  resources:
    requests:
      cpu: 100m
      memory: 128Mi

  env:
    TZ: "Europe/Paris"
    AUTH_PROVIDER: "credentials"
    NEXTAUTH_URL: "https://homarr.internal.rmsz005.com"

  service:
    enabled: true
    type: ClusterIP
    ports:
      app:
        port: 7575
        targetPort: http
        protocol: TCP

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
    hosts:
      - host: homarr.internal.rmsz005.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - hosts:
          - homarr.internal.rmsz005.com
        secretName: homarr-tls

  httproute:
    enabled: false

  rbac:
    enabled: false

  securityContext:
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0

  podSecurityContext:
    fsGroup: 0

  strategyType: Recreate

  readinessProbe:
    httpGet:
      path: /api/health/ready
      port: 7575
    initialDelaySeconds: 30
    periodSeconds: 10

  livenessProbe:
    httpGet:
      path: /api/health/ready
      port: 7575
    initialDelaySeconds: 60
    periodSeconds: 30

  # Node selection (optional - adjust if needed)
  nodeSelector: {}
  tolerations: []
  affinity: {}

