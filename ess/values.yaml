---
# Element Server Suite Community Edition Configuration
# Cluster: sabkhi_lab

matrix-stack:
  # ============================================================================
  # HOSTNAMES - Matrix server identity and service endpoints
  # ============================================================================
  global:
    # Matrix server name (used for federation and user IDs like @user:matrix.internal.rmsz005.com)
    serverName: matrix.internal.rmsz005.com
    
  # Service-specific hostnames
  elementWeb:
    # Element Web client interface
    hostname: chat.internal.rmsz005.com
    
  synapse:
    # Matrix homeserver (federation endpoint)
    hostname: matrix.internal.rmsz005.com
    
  matrixAuthenticationService:
    # Matrix Authentication Service (login/registration)
    hostname: account.internal.rmsz005.com
    
  coturn:
    # VOIP/TURN server for audio/video calls
    hostname: mrtc.internal.rmsz005.com

  # ============================================================================
  # POSTGRESQL DATABASE
  # ============================================================================
  postgresql:
    # Use chart-managed PostgreSQL
    enabled: true
    
    primary:
      # Storage configuration
      persistence:
        enabled: true
        storageClass: "longhorn-nvme-replicated"
        size: 5Gi
        annotations:
          recurring-job.longhorn.io/source: enabled
          recurring-job-group.longhorn.io/critical: enabled
      
      # Resource allocation
      resources:
        requests:
          memory: "512Mi"
          cpu: "200m"
        # No limits (best practice per user request)
        limits: {}
      
      # PostgreSQL performance tuning
      extendedConfiguration: |
        # Memory Configuration
        shared_buffers = 128MB
        effective_cache_size = 512MB
        work_mem = 8MB
        maintenance_work_mem = 64MB
        
        # Connection Configuration
        max_connections = 200
        
        # WAL Configuration
        wal_buffers = 16MB
        checkpoint_completion_target = 0.9
        
        # Performance for NVMe
        random_page_cost = 1.1
        effective_io_concurrency = 200
        
        # Logging
        log_min_duration_statement = 1000
        log_line_prefix = '%t [%p] %u@%d '

  # ============================================================================
  # SYNAPSE - Matrix Homeserver
  # ============================================================================
  synapse:
    enabled: true
    
    # Media storage configuration
    persistence:
      storageClass: "longhorn-nvme-replicated"
      size: 10Gi
      annotations:
        recurring-job.longhorn.io/source: enabled
        recurring-job-group.longhorn.io/critical: enabled
    
    # Resource allocation
    resources:
      requests:
        memory: "1024Mi"
        cpu: "500m"
      limits: {}
    
    # Synapse configuration
    config:
      # Federation disabled for initial deployment (can enable later after security hardening)
      federation:
        enabled: false
      
      # Media repository
      media:
        maxUploadSize: "100M"
        
      # Registration (disabled, use mas-cli to create users initially)
      registration:
        enabled: false
        
      # Presence and typing indicators
      presence:
        enabled: true
        
      # URL previews
      urlPreviews:
        enabled: true
        
      # Signing key (auto-generated by chart)
      signingKey:
        autoGenerate: true
    
    # Synapse ingress
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        cert-manager.io/common-name: "matrix.internal.rmsz005.com"
        # Best practice: Allow large uploads for media/attachments
        nginx.ingress.kubernetes.io/proxy-body-size: "100m"
        # Long timeouts for federation and sync
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        # WebSocket support for sync
        nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
      hosts:
        - host: matrix.internal.rmsz005.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - matrix.internal.rmsz005.com
          secretName: matrix-synapse-tls

  # ============================================================================
  # MATRIX AUTHENTICATION SERVICE (MAS)
  # ============================================================================
  matrixAuthenticationService:
    enabled: true
    
    # Resource allocation
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits: {}
    
    # MAS configuration
    config:
      # Email configuration (using Brevo SMTP like Bitwarden)
      email:
        enabled: true
        from: "matrix@rmsz005.com"
        replyTo: "no-reply@rmsz005.com"
        transport: smtp
        
        smtp:
          mode: starttls
          host: smtp-relay.brevo.com
          port: 587
          # Credentials from sealed secret (to be created)
          username:
            valueFrom:
              secretKeyRef:
                name: ess-smtp-secret
                key: username
          password:
            valueFrom:
              secretKeyRef:
                name: ess-smtp-secret
                key: password
      
      # Account management settings
      passwordRegistration:
        enabled: true
        requireEmailVerification: true
      
      # Session management
      sessions:
        ttl: 2592000  # 30 days
        inactivityTtl: 604800  # 7 days
    
    # MAS ingress
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        cert-manager.io/common-name: "account.internal.rmsz005.com"
        nginx.ingress.kubernetes.io/proxy-body-size: "10m"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      hosts:
        - host: account.internal.rmsz005.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - account.internal.rmsz005.com
          secretName: matrix-mas-tls

  # ============================================================================
  # ELEMENT WEB - Matrix Web Client
  # ============================================================================
  elementWeb:
    enabled: true
    
    # Resource allocation
    resources:
      requests:
        memory: "64Mi"
        cpu: "10m"
      limits: {}
    
    # Element Web configuration
    config:
      defaultCountryCode: "US"
      showLabsSettings: true
      enablePresenceByHsUrl:
        matrix.internal.rmsz005.com: true
    
    # Element Web ingress
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        cert-manager.io/common-name: "chat.internal.rmsz005.com"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      hosts:
        - host: chat.internal.rmsz005.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - chat.internal.rmsz005.com
          secretName: matrix-element-web-tls

  # ============================================================================
  # COTURN - VOIP/TURN Server
  # ============================================================================
  coturn:
    enabled: true
    
    # Resource allocation
    resources:
      requests:
        memory: "256Mi"
        cpu: "100m"
      limits: {}
    
    # TURN server configuration
    config:
      # Shared secret (auto-generated by chart)
      sharedSecret:
        autoGenerate: true
    
    # Service configuration (needs LoadBalancer for external TURN access)
    service:
      type: LoadBalancer
      annotations:
        metallb.universe.tf/loadBalancerIPs: "192.168.1.240"
    
    # Coturn ingress (for web access)
    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        cert-manager.io/common-name: "mrtc.internal.rmsz005.com"
      hosts:
        - host: mrtc.internal.rmsz005.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - mrtc.internal.rmsz005.com
          secretName: matrix-coturn-tls

  # ============================================================================
  # SECURITY & SECRETS
  # ============================================================================
  # Auto-generate initial secrets (signing keys, shared secrets)
  initSecrets:
    enabled: true

